# pip install cmake
# pip install face_recognition
# pip install opencv-python

import face_recognition
import cv2
import numpy as np
import csv
from datetime import datetime

# Start video capture
video_capture = cv2.VideoCapture(0)

# Load known faces
kapil_image = face_recognition.load_image_file("faces/kapil.jpg")
kapil_encoding = face_recognition.face_encodings(kapil_image)[0]

shahrukh_image = face_recognition.load_image_file("faces/shahrukh.jpg")
shahrukh_encoding = face_recognition.face_encodings(shahrukh_image)[0]

known_face_encodings = [kapil_encoding, shahrukh_encoding]
known_face_names = ["Kapil", "Shahrukh"]

# List of expected students
students = known_face_names.copy()

face_locations = []
face_encodings = []

# Get the current date
now = datetime.now()
current_date = now.strftime("%m-%d-%Y")

# Create a CSV file for the current date
f = open(f"{current_date}.csv", "w+", newline="")
lnwriter = csv.writer(f)
lnwriter.writerow(["Name", "Time"])

while True:
    ret, frame = video_capture.read()
    if not ret:
        break

    # Resize and convert frame
    small_frame = cv2.resize(frame, (0, 0), fx=0.25, fy=0.25)
    rgb_small_frame = cv2.cvtColor(small_frame, cv2.COLOR_BGR2RGB)

    # Detect faces
    face_locations = face_recognition.face_locations(rgb_small_frame)
    face_encodings = face_recognition.face_encodings(rgb_small_frame, face_locations)

    for face_encoding, face_location in zip(face_encodings, face_locations):
        matches = face_recognition.compare_faces(known_face_encodings, face_encoding)
        face_distances = face_recognition.face_distance(known_face_encodings, face_encoding)
        best_match_index = np.argmin(face_distances)

        if matches[best_match_index]:
            name = known_face_names[best_match_index]

            if name in students:
                students.remove(name)
                current_time = datetime.now().strftime("%H:%M:%S")
                lnwriter.writerow([name, current_time])

            # Draw a box and name around the face
            top, right, bottom, left = face_location
            top *= 4
            right *= 4
            bottom *= 4
            left *= 4

            cv2.rectangle(frame, (left, top), (right, bottom), (0, 255, 0), 2)
            cv2.putText(frame, name, (left, top - 10), cv2.FONT_HERSHEY_SIMPLEX, 1, (0, 255, 0), 2)

            # Also write present status on screen
            cv2.putText(frame, f"{name} present", (10, 100), cv2.FONT_HERSHEY_SIMPLEX,
                        1.5, (255, 0, 0), 3)

    # Show the video frame
    cv2.imshow("Attendance", frame)

    # Break on pressing 'q'
    if cv2.waitKey(1) & 0xFF == ord('q'):
        break

# Clean up
video_capture.release()
cv2.destroyAllWindows()
f.close()
